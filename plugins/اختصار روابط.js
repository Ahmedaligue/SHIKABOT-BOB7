import fetch from 'node-fetch'; 

let handler = async function (m, { text }) {
  try {
    if (!text) {
      m.reply(`Ù„Ùˆ ØªØ¨ØºØ§Ù‡Ø¹Ø§ÙŠØ² Ø¨Ø¯ÙˆÙ† ØªØ®ØµÙŠØµ Ø§ÙƒØªØ¨ : 
. Ø§Ø®ØªØµØ§Ø± ÙˆØ­Ø· Ø±Ø§Ø¨Ø·
Ù…Ø«Ø§Ù„ : 
.Ø§Ø®ØªØµØ§Ø± https://bk9.site/ 
Ù„Ùˆ Ø¹Ø§ÙŠØ² Ø¨ØªØ®ØµÙŠØµ Ø§ÙƒØªØ¨ : 
.Ø§Ø®ØªØµØ§Ø± Ø­Ø· Ø±Ø§Ø¨Ø· + ÙƒÙ„Ù…Ø©
Ù…Ø«Ø§Ù„ : 
.Ø§Ø®ØªØµØ§Ø± https://bk9.site/ + Ù‚Ø±ÙˆØ¨_Ø§Ù„Ù…Ù„ØµÙ‚Ø§Øª`);
      return;
    }
    const [link, alias] = text.split("+").map(part => part.trim());
    let apiUrl = `https://bk9.site/api/create?url=${encodeURIComponent(link)}`;
    if (alias) apiUrl += `&alias=${encodeURIComponent(alias)}`;
    const response = await fetch(apiUrl);
    const data = await response.json();

    if (data.BK99) {
      return m.reply("Ø§Ù„ØªØ®ØµÙŠÙ€Ù€Øµ Ø¸Ù‡ Ù…Ø§Ø®Ù€ÙˆØ° Ø¬Ù€Ø±Ø¨ ÙˆØ§Ø­Ø¯ ØªØ§Ù†Ù€ÙŠðŸ¦¦.");
    }
    const shortURL = data.BK9;
    return m.reply(`ÖŽâ•ŽØªÙ€Ù…  Ø§Ø®Ù€ØªÙ€ØµÙ€Ø§Ø±  Ø±Ø§Ø¨Ù€Ø·Ù€Ùƒ ${alias ? ' Ù…Ø¹ Ø§Ù„ØªØ®ØµÙŠØµ Ø¨ "' + alias + '"' : ''}:\n\n${shortURL}`);
  } catch (error) {
    console.error(error);
    return m.reply('Ø®Ø·Ø£');
  }
};

handler.command = ['Ø§Ø®ØªØµØ§Ø±'];
handler.tags = ['Ø§Ø®ØªØµØ§Ø±'];
export default handler;
